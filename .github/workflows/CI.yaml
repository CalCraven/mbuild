name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron:  "0 0 * * *"

jobs:
  test:
    if: github.event.pull_request.draft == false
    name: mBuild Tests (Linux)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
        name: Checkout Branch / Pull Request

      - name: Install Mamba (Linux)
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment-dev.yml
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Install Package
        run: python -m pip install -e .

      - name: Test (OS -> ${{ matrix.os }} / Python -> ${{ matrix.python-version }})
        run: python -m pytest -v --cov=mbuild --cov-report=xml --cov-append --cov-config=setup.cfg --color yes --pyargs mbuild

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v5
        with:
          name: mBuild-Coverage
          verbose: true
          files: ./coverage.xml

  macos-test:
    if: github.event.pull_request.draft == false
    name: mBuild Tests (MacOS)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, macOS-13]
        python-version: ["3.12"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
        name: Checkout Branch / Pull Request

      - name: Install Mamba (Linux)
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment-dev.yml
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Install Package
        run: python -m pip install -e .

      - name: Test (OS -> ${{ matrix.os }} / Python -> ${{ matrix.python-version }})
        run: python -m pytest -v --cov=mbuild --cov-report=xml --cov-append --cov-config=setup.cfg --color yes --pyargs mbuild

  windows-wsl-test:
    if: github.event.pull_request.draft == false
    name: mBuild Tests (WSL)
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: WSL
        uses: Vampire/setup-wsl@v4
        with:
          distribution: Ubuntu-24.04
          update: false
        run: ls -a
        shell: wsl-bash {0}

  bleeding-edge-test:
    if: github.event.pull_request.draft == false
    name: Bleeding Edge mosdef Tests for mBuild
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
        name: Checkout Branch / Pull Request

      - name: Install Mamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment-dev.yml
          create-args: python=3.12

      - name: Install Packages from Source
        run: |
          pip install -e .

      - name: Run Bleeding Edge Tests
        run: |
          python -m pytest -v --color yes --pyargs mbuild

  docker:
    runs-on: ubuntu-latest
    needs: test
    name: Build Docker Image
    if: github.event_name != 'pull_request'

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Get Tagged Version
        run: |
          echo "DOCKER_TAGS=mosdef/mbuild:${GITHUB_REF_NAME}, mosdef/mbuild:stable" >> $GITHUB_ENV
        if: github.ref_type == 'tag'

      - name: Get Push Version
        run: |
          echo "DOCKER_TAGS=mosdef/mbuild:${GITHUB_REF_NAME}, mosdef/mbuild:latest" >> $GITHUB_ENV
        if: github.ref_type == 'branch'

      - name: Docker Image Info
        run: |
          echo Docker Image tags: ${DOCKER_TAGS}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKER_TAGS }}
